//
// Copyright (c) ZeroC, Inc. All rights reserved.
//
//
// Ice version 3.7.3
//
// <auto-generated>
//
// Generated from file `smarthome.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package SmartHome;

public class PanTiltZoom extends com.zeroc.Ice.Value
{
    public PanTiltZoom()
    {
    }

    public PanTiltZoom(short pan, short tilt, short zoom)
    {
        setPan(pan);
        setTilt(tilt);
        setZoom(zoom);
    }

    private short pan;
    private boolean _pan;

    public short getPan()
    {
        if(!_pan)
        {
            throw new java.util.NoSuchElementException("pan is not set");
        }
        return pan;
    }

    public void setPan(short pan)
    {
        _pan = true;
        this.pan = pan;
    }

    public boolean hasPan()
    {
        return _pan;
    }

    public void clearPan()
    {
        _pan = false;
    }

    public void optionalPan(java.util.Optional<java.lang.Short> v)
    {
        if(v == null || !v.isPresent())
        {
            _pan = false;
        }
        else
        {
            _pan = true;
            pan = v.get();
        }
    }

    public java.util.Optional<java.lang.Short> optionalPan()
    {
        if(_pan)
        {
            return java.util.Optional.of(pan);
        }
        else
        {
            return java.util.Optional.empty();
        }
    }

    private short tilt;
    private boolean _tilt;

    public short getTilt()
    {
        if(!_tilt)
        {
            throw new java.util.NoSuchElementException("tilt is not set");
        }
        return tilt;
    }

    public void setTilt(short tilt)
    {
        _tilt = true;
        this.tilt = tilt;
    }

    public boolean hasTilt()
    {
        return _tilt;
    }

    public void clearTilt()
    {
        _tilt = false;
    }

    public void optionalTilt(java.util.Optional<java.lang.Short> v)
    {
        if(v == null || !v.isPresent())
        {
            _tilt = false;
        }
        else
        {
            _tilt = true;
            tilt = v.get();
        }
    }

    public java.util.Optional<java.lang.Short> optionalTilt()
    {
        if(_tilt)
        {
            return java.util.Optional.of(tilt);
        }
        else
        {
            return java.util.Optional.empty();
        }
    }

    private short zoom;
    private boolean _zoom;

    public short getZoom()
    {
        if(!_zoom)
        {
            throw new java.util.NoSuchElementException("zoom is not set");
        }
        return zoom;
    }

    public void setZoom(short zoom)
    {
        _zoom = true;
        this.zoom = zoom;
    }

    public boolean hasZoom()
    {
        return _zoom;
    }

    public void clearZoom()
    {
        _zoom = false;
    }

    public void optionalZoom(java.util.Optional<java.lang.Short> v)
    {
        if(v == null || !v.isPresent())
        {
            _zoom = false;
        }
        else
        {
            _zoom = true;
            zoom = v.get();
        }
    }

    public java.util.Optional<java.lang.Short> optionalZoom()
    {
        if(_zoom)
        {
            return java.util.Optional.of(zoom);
        }
        else
        {
            return java.util.Optional.empty();
        }
    }

    public PanTiltZoom clone()
    {
        return (PanTiltZoom)super.clone();
    }

    public static String ice_staticId()
    {
        return "::SmartHome::PanTiltZoom";
    }

    @Override
    public String ice_id()
    {
        return ice_staticId();
    }

    /** @hidden */
    public static final long serialVersionUID = 492987776L;

    /** @hidden */
    @Override
    protected void _iceWriteImpl(com.zeroc.Ice.OutputStream ostr_)
    {
        ostr_.startSlice(ice_staticId(), -1, true);
        if(_pan)
        {
            ostr_.writeShort(0, pan);
        }
        if(_tilt)
        {
            ostr_.writeShort(1, tilt);
        }
        if(_zoom)
        {
            ostr_.writeShort(2, zoom);
        }
        ostr_.endSlice();
    }

    /** @hidden */
    @Override
    protected void _iceReadImpl(com.zeroc.Ice.InputStream istr_)
    {
        istr_.startSlice();
        if(_pan = istr_.readOptional(0, com.zeroc.Ice.OptionalFormat.F2))
        {
            pan = istr_.readShort();
        }
        if(_tilt = istr_.readOptional(1, com.zeroc.Ice.OptionalFormat.F2))
        {
            tilt = istr_.readShort();
        }
        if(_zoom = istr_.readOptional(2, com.zeroc.Ice.OptionalFormat.F2))
        {
            zoom = istr_.readShort();
        }
        istr_.endSlice();
    }
}
